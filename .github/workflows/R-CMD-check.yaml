on:
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('**/DESCRIPTION', '.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-
            ${{ runner.os }}-r-

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::lintr, any::spelling, any::covr
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Lint
        if: github.ref == 'refs/heads/devel'
        run: lintr::lint_package()
        shell: Rscript {0}

      - name: Spell check
        run: |
          try(spelling::spell_check_package(), silent = TRUE)
        shell: Rscript {0}

      - name: Test coverage (covr)
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devel') &&
            matrix.config.os == 'ubuntu-latest' &&
            matrix.config.r == 'release'
        run: |
          cov <- covr::package_coverage()
          covr::to_cobertura(cov, file = "coverage.xml")
          try(covr::codecov(token = Sys.getenv("CODECOV_TOKEN"), coverage = cov),
              silent = TRUE)
        shell: Rscript {0}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to Codecov (action)
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devel') &&
            matrix.config.os == 'ubuntu-latest' &&
            matrix.config.r == 'release'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
